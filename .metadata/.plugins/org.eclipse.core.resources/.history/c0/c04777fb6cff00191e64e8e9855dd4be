package ua.nure.cs.chebanenko.usermanagement171.db;

import java.sql.*;
import java.util.Collection;
import java.util.LinkedList;

import ua.nure.cs.chebanenko.usermanagement171.domain.User;

public class HsqldbUserDao implements Dao<User> {
	
	private static final String CALL_IDENTITY = "call IDENTITY()";
	private static final String INSERT_QUERY = "INSERT INTO users (firstname,lastname,dateofbirth) VALUES (?,?,?)";
	ConnectionFactory connectionFactory;
	

	public ConnectionFactory getConnectionFactory() {
		return connectionFactory;
	}

	public void setConnectionFactory(ConnectionFactory connectionFactory) {
		this.connectionFactory = connectionFactory;
	}

	public HsqldbUserDao(ConnectionFactory connectionFactory2) {
		this.connectionFactory=connectionFactory;
	}

	@Override
	public User create(User entity) throws DatabaseException {
		Connection connection = connectionFactory.createConnection();
		try {
			PreparedStatement preparedStatement = connection.prepareStatement(INSERT_QUERY);
			preparedStatement.setString(1,entity.getFirstName());
			preparedStatement.setString(2,entity.getLastName());
			preparedStatement.setDate(3,new Date(entity.getDateOfBirth().getTime()));
			int numberOfRows = preparedStatement.executeUpdate();
			if(numberOfRows != 1) {
				throw new DatabaseException("Number of inserted rows: "+ numberOfRows);
			}
			CallableStatement callableStatement = connection.prepareCall(CALL_IDENTITY);
			ResultSet keys = callableStatement.executeQuery();
			if(keys.next()) {
				entity.setId(keys.getLong(1));
			}
			keys.close();
			callableStatement.close();
			preparedStatement.close();
			connection.close();
			return entity;
		} catch (SQLException e) {
			throw new DatabaseException(e);
		}
	}

	//Написать тесты и вынести в константы запросы

	@Override
	public void update(User entity) throws DatabaseException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(User entity) throws DatabaseException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public User find(Long id) throws DatabaseException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Collection<User> findAll() throws DatabaseException {
		Collection<User> result = new LinkedList<User>();
		Connection connection = connectionFactory.createConnection();
		Statement statement = null;
		try {
			statement = connection.createStatement();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		try {
			ResultSet resultSet = statement.executeQuery("SELECT * FROM Users");
			while (resultSet.next()) {
				User user = new User();
				user.setId(resultSet.getLong(1));
				user.setFirstName(resultSet.getString(2));
				user.setLastName(resultSet.getString(3));
				user.setDateOfBirth(resultSet.getTime(4));
			}
		} catch (SQLException e) {
			throw  new DatabaseException(e);
		}
		// TODO Auto-generated method stub
		return result;
	}

}

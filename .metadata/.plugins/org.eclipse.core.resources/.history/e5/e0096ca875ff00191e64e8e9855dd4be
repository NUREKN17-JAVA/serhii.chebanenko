package ua.nure.cs.chebanenko.usermanagement171.db;

import ua.nure.cs.chebanenko.usermanagement171.domain.User;

import java.io.IOException;
import java.sql.Connection;
import java.util.Properties;

public abstract class DaoFactory {
    protected static Properties properties;

    private static DaoFactory instance;

    static {
        properties = new Properties();
        try {
            properties.load(DaoFactory.class.getClassLoader().getResourceAsStream("setings.properties"));
        } catch (IOException e) {
            throw new RuntimeException("Incorrect or missing settings");
        }
    }

    protected DaoFactory() {}

    public static synchronized DaoFactory getInstance() {
        if (instance == null) {
            Class<?> factoryClass = null;
            try {
                factoryClass = Class.forName(properties.getProperty("dao.Factory"));
                instance = (DaoFactory) factoryClass.newInstance();
            } catch (Exception e) {
                throw new RuntimeException(e);
            }

        }
        return instance;
    }

    public void init(Properties properties) {
        this.properties = properties;
        instance = null;
    }

    protected ConnectionFactory getConnectionFactory() {
        return new ConnectionFactoryImpl(properties);
    }

    public abstract Dao<User> getUserDao();

}

